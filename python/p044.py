'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''

from functools import lru_cache

def p(n):
    return n*(3*n-1)/2

def isPent(P):
    n = (1 + (24*P + 1)**0.5)/6
    return n == int(n)

@lru_cache
def pdiff(u):
    dmin = float('inf')
    for j in range(1, u):
        Pj = p(j)
        for k in range(j+1, u):
            Pk = p(k)
            s, d = Pk + Pj, Pk - Pj
            if isPent(s) and isPent(d):
                dmin = min(dmin, d)
    return dmin

print(pdiff(3000))
